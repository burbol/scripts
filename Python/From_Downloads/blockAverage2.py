# Autogenerated with SMOP version 0.25
# main.py blockAverage.m -o blockAverage.py
from __future__ import division
import numpy as np
from runtime import *
def blockAverage_(*args):
    nargin = len(args)
    if nargin > 0:
        datastream = varargin[0]
    if nargin > 1:
        maxBlockSize = varargin[1]
    if nargin > 2:
        isplot = varargin[2]
    # 3
    Nobs=length_(datastream)
    # 4
    minBlockSize=1
    if (nargin_() < 2):
        # 7
        maxBlockSize=floor_(Nobs / 4)
    if (nargin_() < 3):
        # 11
        isplot=1
    # 16
    NumBlocks=maxBlockSize - minBlockSize + 1
    # 18
    blockMean=zeros_(NumBlocks,1)
    # 19
    blockVar=zeros_(NumBlocks,1)
    # 20
    blockCtr=1
    for blockSize in range(minBlockSize,(maxBlockSize+1)):
        # 28
        Nblock=floor_(Nobs / blockSize)
        # 29
        obsProp=zeros_(Nblock,1)
        for i in range(1,(Nblock+1)):
            # 34
            ibeg=(i - 1) * blockSize + 1
            # 35
            iend=ibeg + blockSize - 1
            # 36
            obsProp[(i-1)]=mean_(datastream[(ibeg-1):iend])
        # 39
        blockMean[(blockCtr-1)]=mean_(obsProp)
        # 40
        blockVar[(blockCtr-1)]=var_(obsProp) / (Nblock - 1)
        # 41
        blockCtr=blockCtr + 1
    # 46
    v=range(minBlockSize,(maxBlockSize+1))
    if (isplot):
        # 50
        h=figure_()
        subplot_(2,1,1)
        plot_(v,sqrt_(blockVar),'ro-','LineWidth',2)
        xlabel_('block size')
        ylabel_('std')
        subplot_(2,1,2)
        errorbar_(v,blockMean,sqrt_(blockVar))
        ylabel_('<x>')
        xlabel_('block size')
        printf_('<x> = %f +/- %f \\n',blockMean[(end-1)],sqrt_(blockVar[(end-1)]))
        # 72
        W=4
        # 72
        H=3
        set_(h,'PaperUnits','inches')
        set_(h,'PaperSize',np.array([H,W]))
        set_(h,'PaperPosition',np.array([0,0,W,H]))
        # 77
        FN=findall_(h,'-property','FontName')
        set_(FN,'FontName','HelveticaBold')
        # 80
        FS=findall_(h,'-property','FontSize')
        set_(FS,'FontSize',8)
        print_('tmp.png','-dpng')
    return v,blockVar,blockMean
